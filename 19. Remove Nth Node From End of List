/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
// Solution01
class Solution {
     public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode sentinel = new ListNode(-1, head);
        if(head == null || (head.next == null && n == 1)) return null;
        recursion(sentinel ,n);
        return sentinel.next;
    }

    private int recursion(ListNode head, int n){
        if(head == null) return 0;
        int nth = recursion(head.next, n);
        if(nth == n){
            head.next = head.next.next;
        }
        return nth + 1;
    }
}

// Soultion02
class Solution {
     public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode sentinel = new ListNode(-1, head);
        ListNode p1 = sentinel;
        ListNode p2 = head;
        for (int i = 0; i < n; i++) p2 = p2.next;
        while (p2 != null){
            p1 = p1.next;
            p2 = p2.next;
        }
        p1.next = p1.next.next;
        return sentinel.next;
    }
}
