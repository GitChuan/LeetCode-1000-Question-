public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ret = new ArrayList<>();
        if(root == null) return ret;
        LinkedList<TreeNode> deque = new LinkedList<>();
        deque.offer(root);
        int c1 = 1;
        int floor = 1;
        while (!deque.isEmpty()){
            List<Integer> level = new LinkedList<>();
            int c2 = 0;
            for (int i = 0; i < c1; i++) {
                TreeNode node = deque.poll();
                if(node.left != null){
                    deque.offer(node.left);
                    ++c2;
                }
                if(node.right != null){
                    deque.offer(node.right);
                    ++c2;
                }
                if(floor % 2 == 1){
                    level.add(0, node.val);
                } else {
                    level.add(node.val);
                }
            }
            ++floor;
            c1 = c2;
            ret.add(level);
        }
        return ret;
    }
