/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode listNode = new ListNode();
        ListNode firstAdd = listNode;
        while (l1 != null || l2 != null){
            int sum = 0;
            if(l1 != null){
                sum += l1.val;
                l1 = l1.next;
            }
            if(l2 != null){
                sum += l2.val;
                l2 = l2.next;
            }

            boolean flag = false;
            if(sum >= 10){
                flag = true;
                sum %= 10;
                listNode.val += sum;
            } else {
                listNode.val += sum;
            }
            if(flag){
                listNode.next = new ListNode(1);
            } else if(l1 != null || l2 != null){
                listNode.next = new ListNode(0);
            }
            if(listNode.val == 10){
                listNode.val = 0;
                if(listNode.next == null){
                    listNode.next = new ListNode();
                }
                listNode.next.val += 1;
            }
            listNode = listNode.next;
        }

        return firstAdd;
    }
}
