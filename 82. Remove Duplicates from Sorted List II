/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if (head == null || head.next == null) return head;
        if (head.val == head.next.val) {
            ListNode x = head.next.next;
            while (x != null && x.val == head.val) {
                x = x.next;
            }
            return deleteDuplicates(x);
        } else {
            head.next = deleteDuplicates(head.next);
            return head;
        }
    }
}

// solution02
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if (head == null || head.next == null) return head;
        ListNode sentinel = new ListNode(-1, head);
        ListNode p1 = sentinel;
        ListNode p2 = p1.next;
        ListNode p3 = p2.next;
        while (p3 != null){
            if(p3.val == p2.val){
                while (p3 != null && p3.val == p2.val){
                    p3 = p3.next;
                }
                p1.next = p3;
                p2 = p3;
                if(p3!=null) p3 = p3.next;
                else break;
            } else {
                p1 = p1.next;
                p2 = p1.next;
                p3 = p2.next;
            }
        }
        return sentinel.next;
    }
}
